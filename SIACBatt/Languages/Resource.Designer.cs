//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIACBatt.Languages {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SIACBatt.Languages.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start.
        /// </summary>
        public static string BtnConnect {
            get {
                return ResourceManager.GetString("BtnConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop.
        /// </summary>
        public static string BtnDisconnect {
            get {
                return ResourceManager.GetString("BtnDisconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string BtnExit {
            get {
                return ResourceManager.GetString("BtnExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fullscreen.
        /// </summary>
        public static string BtnFullscreen {
            get {
                return ResourceManager.GetString("BtnFullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected to no.: {0}, OpMode: {1}, AutoSend: {2}, Legacy: {3}.
        /// </summary>
        public static string InfoConnectedMaster {
            get {
                return ResourceManager.GetString("InfoConnectedMaster", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S/N: {0}, FW: {1}, OpMode: {2}, Protocol: {3}, Channel: {4}.
        /// </summary>
        public static string InfoConnectedSimSrr {
            get {
                return ResourceManager.GetString("InfoConnectedSimSrr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input via {0}.
        /// </summary>
        public static string InfoInputSource {
            get {
                return ResourceManager.GetString("InfoInputSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown device.
        /// </summary>
        public static string InfoUnknownDevice {
            get {
                return ResourceManager.GetString("InfoUnknownDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SI-Master.
        /// </summary>
        public static string InputHeader {
            get {
                return ResourceManager.GetString("InputHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to COM-Port:.
        /// </summary>
        public static string InputTitleCOM {
            get {
                return ResourceManager.GetString("InputTitleCOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device configuration could not be read successfully. Reason is probably: {0} ({1}).
        /// </summary>
        public static string MsgBoxErrorConfig {
            get {
                return ResourceManager.GetString("MsgBoxErrorConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device is configured with autosend flag.
        ///
        ///Please reconfigure without autosend!.
        /// </summary>
        public static string MsgBoxErrorConfigAutosend {
            get {
                return ResourceManager.GetString("MsgBoxErrorConfigAutosend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading the backup of SI-Master with firmware &lt; FW595 is not supported..
        /// </summary>
        public static string MsgBoxErrorConfigDescriptionBackupReadout {
            get {
                return ResourceManager.GetString("MsgBoxErrorConfigDescriptionBackupReadout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No description available.
        /// </summary>
        public static string MsgBoxErrorConfigDescriptionNo {
            get {
                return ResourceManager.GetString("MsgBoxErrorConfigDescriptionNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device does not have a backup memory storage..
        /// </summary>
        public static string MsgBoxErrorConfigDescriptionNoBackup {
            get {
                return ResourceManager.GetString("MsgBoxErrorConfigDescriptionNoBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected operating mode is not supported on the current device..
        /// </summary>
        public static string MsgBoxErrorConfigDescriptionOpMode {
            get {
                return ResourceManager.GetString("MsgBoxErrorConfigDescriptionOpMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device is configured to use legacy protocol.
        ///This application does not support legacy protocol.
        ///
        ///Please reconfigure!.
        /// </summary>
        public static string MsgBoxErrorConfigLegacy {
            get {
                return ResourceManager.GetString("MsgBoxErrorConfigLegacy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No compatible device was found.
        ///
        ///Please connect a SI Master device!.
        /// </summary>
        public static string MsgBoxErrorConfigNoDevice {
            get {
                return ResourceManager.GetString("MsgBoxErrorConfigNoDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The device is not configured to read cards. No data can be processed from this station.
        ///
        ///Please reconfigure!.
        /// </summary>
        public static string MsgBoxErrorConfigRedout {
            get {
                return ResourceManager.GetString("MsgBoxErrorConfigRedout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SIDB Info.
        /// </summary>
        public static string MsgBoxErrorConfigTitle {
            get {
                return ResourceManager.GetString("MsgBoxErrorConfigTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not determine device. Please refresh the device list and retry..
        /// </summary>
        public static string MsgBoxErrorDeviceDetermine {
            get {
                return ResourceManager.GetString("MsgBoxErrorDeviceDetermine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred preparing the device {0}:
        ///
        ///{1}..
        /// </summary>
        public static string MsgBoxErrorDeviceException {
            get {
                return ResourceManager.GetString("MsgBoxErrorDeviceException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not open the input device, please check device configuration..
        /// </summary>
        public static string MsgBoxErrorDeviceOpen {
            get {
                return ResourceManager.GetString("MsgBoxErrorDeviceOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred!.
        /// </summary>
        public static string MsgBoxErrorTitle {
            get {
                return ResourceManager.GetString("MsgBoxErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Battery Status.
        /// </summary>
        public static string OutputHeader {
            get {
                return ResourceManager.GetString("OutputHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The battery is older than {0} years, replace immediately!.
        /// </summary>
        public static string OutputResultDateError {
            get {
                return ResourceManager.GetString("OutputResultDateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Battery replacement {0}..
        /// </summary>
        public static string OutputResultDateOK {
            get {
                return ResourceManager.GetString("OutputResultDateOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The battery is soon {0} years old, replace {1}..
        /// </summary>
        public static string OutputResultDateWaring {
            get {
                return ResourceManager.GetString("OutputResultDateWaring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Voltage is below {0}V. Do not use the card!.
        /// </summary>
        public static string OutputResultVoltageError {
            get {
                return ResourceManager.GetString("OutputResultVoltageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Voltage is over {0}V..
        /// </summary>
        public static string OutputResultVoltageOK {
            get {
                return ResourceManager.GetString("OutputResultVoltageOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Voltage is below {0}V. Prepare replacement..
        /// </summary>
        public static string OutputResultVoltageWarning {
            get {
                return ResourceManager.GetString("OutputResultVoltageWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date:.
        /// </summary>
        public static string OutputTitleDate {
            get {
                return ResourceManager.GetString("OutputTitleDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SIID:.
        /// </summary>
        public static string OutputTitleSSID {
            get {
                return ResourceManager.GetString("OutputTitleSSID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Voltage:.
        /// </summary>
        public static string OutputTitleVoltage {
            get {
                return ResourceManager.GetString("OutputTitleVoltage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SPORTident ActiveCard Battery Status.
        /// </summary>
        public static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
    }
}
